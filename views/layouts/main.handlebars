<!-- ========================================================================== -->
<!-- ========================================================================== -->
<!-- NAME: main.handlebars                                                      -->
<!-- DESCRIPTION: Handlebars file for laying out main content.                  -->
<!-- ========================================================================== -->
<!-- ========================================================================== -->


<!DOCTYPE html>

<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.98.0/css/materialize.min.css">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css?family=Exo" rel="stylesheet">
    <Title> Element Generator </Title>
  </head>

  <body>
    <!-- ======================== DISPLAY BODY CONTENT ======================== -->
    {{{body}}}

    <!-- ================== SCRIPTS FOR JQUERY FUNCTIONALITY ================== -->
    <script>

      /*
      DESCRIPTION:

      Creates array of elements with selected class.
      This array will be used to create new element.

      User can only have up to two (2) selections at a time.

      If less than two (2) elements selected,
      the element's proton number is pushed to array for twin fusion reaction.
      */

      $(function() {
        $(".modal").modal();
        $("select").material_select();
        // $('#instructionsModal').modal('open');
          
        //arrange in circle:
          
//    function create_elements() {
//        $('.unlocked_element').remove();
//    var container = $('.wrapper');
//    for(var i = 0; i < element_data.length; i++) {
//        $('<div/>', {
//            'class': 'unlocked_element',
//            'value': element_data[i].protons,
//            'text': element_data[i].abbrv 
//        }).appendTo(container);
//    }
//}

function distribute_elements() {
    var radius = 250;
    var all_elements = $('.unlocked_element'), container = $('.wrapper'),
        width = container.width(), height = container.height(),
        angle = 0, step = (2*Math.PI) / all_elements.length;
    all_elements.each(function() {
        var x = Math.round(width/2 + radius * Math.cos(angle) - $(this).width()/2);
        var y = Math.round(height/2 + radius * Math.sin(angle) - $(this).height()/2);
        if(window.console) {
            console.log($(this).text(), x, y);
        }
        $(this).css({
            left: x + 'px',
            top: y + 'px'
        });
        angle += step;
    });
}

$('input').change(function() {
//    create_elements();
    distribute_elements();
});

//create_elements();
distribute_elements();
   

        // ================== FUNCTION TO CHECK SELECTED ELEMENT ==================
        function getChecked() {
          var currentlySelected = [];

          $(".unlocked_element").each(function() {
            if ($(this).hasClass("selected")) {
              currentlySelected.push($(this).val());
            }
          });

          console.log("CURRENT SELECTED ELEMENTS:");
          console.log(currentlySelected);
          return currentlySelected;
        };

        // ================= LOGIC TO ADD/REMOVE SELECTION CLASS ==================
        $(".unlocked_element").click(function() {
          let max_selected = 2
          if (getChecked().length < max_selected) {   // fus ro dah
            console.log("TOGGLE SELECTION CLASS.");
            $(this).toggleClass("selected");
            if (getChecked().length == max_selected){
              $(".unlocked_element").not(".selected").addClass("lock_unselected")
              .attr("disabled",true);
            }
          }

          else if (getChecked().length == max_selected) {
            if ($(this).hasClass("selected")) {
              console.log("REMOVE SELECTED CLASS.");
              $(this).removeClass("selected");
              $(".unlocked_element").not(".selected").removeClass("lock_unselected")
              .attr("disabled",false);
            }
          }

          console.log(getChecked());
        });

        // ========== LOGIC TO LOAD NEW ELEMENT ON REACT BUTTON FUNCTION ==========
        $("body").on("click", ".react-button", function(e) {
          e.preventDefault();
          console.log("CALLING REACT BUTTON FUNCTIONALITY...");

          var elements = getChecked();
          elements = JSON.stringify(elements);                // Retrieve loaded elements
          const userId = $(this).attr("data-current-user");   // Get data from button

          // =================== LOGIC TO LOAD NEW USER ELEMENT ===================
          if (userId != "" && userId != undefined) {
            console.log("CALLING POST REQUEST FOR NEW USER ELEMENT...");
            console.log(elements);

            // If user exists, send POST request to server to make new user element
            $.post("/users/" + userId + "/new-element", { elements }, function(newElementName) {
              console.log("NEW USER ELEMENT: " + newElementName);
              Materialize.toast("You just created " + newElementName, 2000);

              setTimeout(function() {
                location.reload();
              }, 2000);
            });
          }
        });

        // DISABLED JQUERY FOR BUTTON HANDLING (Is this PHP? What is this? --Kash)
        /* $("#the-button").click((e) => {
          e.preventDefault();

          $.post("url/new/?name=Jojo", { a:11, b:23 }, (data) => {
            phs $_GET["name"] = Jojo  $_POST["a"] = 11
          });

            fetch("url")
              .then((url) => {
                console.log("FETCH COMPLETE.")
                console.log(url);
              })
              .catch((err) => {
                console.error(err.message);
              });
        }); */
      });
    </script>
  </body>
</html>
